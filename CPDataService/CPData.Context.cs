//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CPDataService
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CPEntities : DbContext
    {
        public CPEntities()
            : base("name=CPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ItemCategory> ItemCategories { get; set; }
        public virtual DbSet<ItemCondition> ItemConditions { get; set; }
        public virtual DbSet<ItemImage> ItemImages { get; set; }
        public virtual DbSet<ItemOffer> ItemOffers { get; set; }
        public virtual DbSet<ItemsForSell> ItemsForSells { get; set; }
        public virtual DbSet<ItemUserBuying> ItemUserBuyings { get; set; }
        public virtual DbSet<ItemUserWatching> ItemUserWatchings { get; set; }
        public virtual DbSet<UserDetail> UserDetails { get; set; }
        public virtual DbSet<UserFavItem> UserFavItems { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserType> UserTypes { get; set; }
        public virtual DbSet<Message> Messages { get; set; }
    
        public virtual ObjectResult<GetfilteredItem_Result> GetfilteredItem(Nullable<double> lat, Nullable<double> lng, Nullable<int> distance, Nullable<int> cat, Nullable<long> currentuserId, string searchString)
        {
            var latParameter = lat.HasValue ?
                new ObjectParameter("lat", lat) :
                new ObjectParameter("lat", typeof(double));
    
            var lngParameter = lng.HasValue ?
                new ObjectParameter("lng", lng) :
                new ObjectParameter("lng", typeof(double));
    
            var distanceParameter = distance.HasValue ?
                new ObjectParameter("distance", distance) :
                new ObjectParameter("distance", typeof(int));
    
            var catParameter = cat.HasValue ?
                new ObjectParameter("cat", cat) :
                new ObjectParameter("cat", typeof(int));
    
            var currentuserIdParameter = currentuserId.HasValue ?
                new ObjectParameter("currentuserId", currentuserId) :
                new ObjectParameter("currentuserId", typeof(long));
    
            var searchStringParameter = searchString != null ?
                new ObjectParameter("searchString", searchString) :
                new ObjectParameter("searchString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetfilteredItem_Result>("GetfilteredItem", latParameter, lngParameter, distanceParameter, catParameter, currentuserIdParameter, searchStringParameter);
        }
    }
}
